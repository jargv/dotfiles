snippet once "#pragma once" !b
#pragma once
$0
endsnippet
snippet inc "include the corresponding header" !b
#include "`!v expand('%:t:r')`.h"
endsnippet
snippet once_wrap "include guard" !b
#ifndef ${1:`!v toupper(expand("%:t:r"))."_H"`}
#define $1

${VISUAL}$0

#endif /* end include guard: $1 */
endsnippet
snippet if "conditional" !b
if (${1:true}){
	${VISUAL}$2
}
endsnippet

snippet ifc "conditional" !b
if (${1:${VISUAL}}){
	$2
}
endsnippet
snippet while "loop" !b
while (${1:true}){
	${VISUAL}$2
}
endsnippet

snippet whilec "conditional" !b
while (${1:${VISUAL}}){
	$2
}
endsnippet
snippet for "range for loop" !b
for (auto& ${1:item} : $2){
	${3:${VISUAL}}
}
endsnippet

snippet ifor "index for loop" !b
for (size_t ${2:i} = 0; $2 < ${1:10}; ++$2){
	${3:${VISUAL}}
}
endsnippet
snippet main "quick main function" !b
#include <stdio.h>

int main(int argc, char** argv){
	printf("main!\n");
	return 0;
}
endsnippet
snippet tds "typedef struct" !b
typedef struct $1 {
  $2
} $1;$0
endsnippet
